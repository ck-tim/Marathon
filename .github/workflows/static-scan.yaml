name: Static Scans

on:
  #push: # not on push for the training (just manual)
  workflow_dispatch: # to allow running manually

# wichtig! check das mal
permissions:
  contents: read


jobs:

  sast-scans:
    name: SAST Scans
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Sources
        uses: actions/checkout@v4
        with:
          # auch wichtig, auch checken
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'

      # auch spannend... funktioniert das bei uns?
      - name: Setup Maven Dependency Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      # ======================================================

      # geht auch mit Sonatype Lifecycle! Siehe Claude
      - name: Generate CycloneDX SBOM
        run: mvn org.cyclonedx:cyclonedx-maven-plugin:2.7.9:makeAggregateBom # outputs to target/bom.json and/or bom.xml

      # attaches artifact to output of build
      # Sonatype SBOM Manager! http://help.sonatype.com/en/sonatype-sbom-manager.html
      - name: Upload SBOM as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx.json
          path: target/bom.json